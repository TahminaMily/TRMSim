/**
 *  "TRMSim-WSN, Trust and Reputation Models Simulator for Wireless 
 * Sensor Networks" is free software: you can redistribute it and/or 
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation, either version 3 of 
 * the License, or (at your option) any later version always keeping 
 * the additional terms specified in this license.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * 
 * Additional Terms of this License
 * --------------------------------
 * 
 * 1. It is Required the preservation of specified reasonable legal notices
 *   and author attributions in that material and in the Appropriate Legal
 *   Notices displayed by works containing it.
 * 
 * 2. It is limited the use for publicity purposes of names of licensors or
 *   authors of the material.
 * 
 * 3. It is Required indemnification of licensors and authors of that material
 *   by anyone who conveys the material (or modified versions of it) with
 *   contractual assumptions of liability to the recipient, for any liability
 *   that these contractual assumptions directly impose on those licensors
 *   and authors.
 * 
 * 4. It is Prohibited misrepresentation of the origin of that material, and it is
 *   required that modified versions of such material be marked in reasonable
 *   ways as different from the original version.
 * 
 * 5. It is Declined to grant rights under trademark law for use of some trade
 *   names, trademarks, or service marks.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program (lgpl.txt).  If not, see <http://www.gnu.org/licenses/>
*/

package es.ants.felixgm.trmsim_wsn.gui.parameterpanels;

import es.ants.felixgm.trmsim_wsn.trm.TRMParameters;
import es.ants.felixgm.trmsim_wsn.trm.btrm_wsn.BTRM_WSN_Parameters;

/**
 * <p>This class represents the panel used to retrieve the parameters of BTRM_WSN</p>
 * @author <a href="http://ants.dif.um.es/~felixgm/en" target="_blank">F&eacute;lix G&oacute;mez M&aacute;rmol</a>, <a href="http://webs.um.es/gregorio" target="_blank">Gregorio Mart&iacute;nez P&eacute;rez</a>
 * @version 0.4
 * @since 0.2
 */
public class BTRM_WSN_ParametersPanel extends TRMParametersPanel {
    
    /** 
     * Creates new form BTRM_WSN_ParametersPanel 
     */
    public BTRM_WSN_ParametersPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        phiLabel = new javax.swing.JLabel();
        phiTextField = new javax.swing.JTextField();
        rhoLabel = new javax.swing.JLabel();
        rhoTextField = new javax.swing.JTextField();
        q0Label = new javax.swing.JLabel();
        q0TextField = new javax.swing.JTextField();
        numAntsLabel = new javax.swing.JLabel();
        numAntsTextField = new javax.swing.JTextField();
        numIterationsLabel = new javax.swing.JLabel();
        numIterationsTextField = new javax.swing.JTextField();
        alphaLabel = new javax.swing.JLabel();
        alphaTextField = new javax.swing.JTextField();
        betaLabel = new javax.swing.JLabel();
        betaTextField = new javax.swing.JTextField();
        initialPheromoneLabel = new javax.swing.JLabel();
        initialPheromoneTextField = new javax.swing.JTextField();
        punishmentThresholdLabel = new javax.swing.JLabel();
        punishmentThresholdTextField = new javax.swing.JTextField();
        pathLengthFactorLabel = new javax.swing.JLabel();
        pathLengthFactorTextField = new javax.swing.JTextField();
        transitionThresholdLabel = new javax.swing.JLabel();
        transitionThresholdTextField = new javax.swing.JTextField();
        phiSlider = new javax.swing.JSlider();
        rhoSlider = new javax.swing.JSlider();
        q0Slider = new javax.swing.JSlider();
        numAntsSlider = new javax.swing.JSlider();
        numIterationsSlider = new javax.swing.JSlider();
        alphaSlider = new javax.swing.JSlider();
        betaSlider = new javax.swing.JSlider();
        initialPheromoneSlider = new javax.swing.JSlider();
        punishmentThresholdSlider = new javax.swing.JSlider();
        pathLengthFactorSlider = new javax.swing.JSlider();
        transitionThresholdSlider = new javax.swing.JSlider();

        setPreferredSize(new java.awt.Dimension(450, 500));

        phiLabel.setText("phi");
        phiLabel.setEnabled(false);

        phiTextField.setEditable(false);
        phiTextField.setText("0.1784");
        phiTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        rhoLabel.setText("rho");
        rhoLabel.setEnabled(false);

        rhoTextField.setEditable(false);
        rhoTextField.setText("0.3044");
        rhoTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        q0Label.setText("q0");
        q0Label.setEnabled(false);

        q0TextField.setEditable(false);
        q0TextField.setText("0.8331");
        q0TextField.setPreferredSize(new java.awt.Dimension(45, 25));

        numAntsLabel.setText("Num ants");
        numAntsLabel.setEnabled(false);

        numAntsTextField.setEditable(false);
        numAntsTextField.setText("0.3973");
        numAntsTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        numIterationsLabel.setText("Num iterations");
        numIterationsLabel.setEnabled(false);

        numIterationsTextField.setEditable(false);
        numIterationsTextField.setText("0.5404");
        numIterationsTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        alphaLabel.setText("alpha");
        alphaLabel.setEnabled(false);

        alphaTextField.setEditable(false);
        alphaTextField.setText("1.0");
        alphaTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        betaLabel.setText("beta");
        betaLabel.setEnabled(false);

        betaTextField.setEditable(false);
        betaTextField.setText("1.0");
        betaTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        initialPheromoneLabel.setText("Initial pheromone");
        initialPheromoneLabel.setEnabled(false);

        initialPheromoneTextField.setEditable(false);
        initialPheromoneTextField.setText("0.4928");
        initialPheromoneTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        punishmentThresholdLabel.setText("Punishment threshold");
        punishmentThresholdLabel.setEnabled(false);

        punishmentThresholdTextField.setEditable(false);
        punishmentThresholdTextField.setText("0.6806");
        punishmentThresholdTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        pathLengthFactorLabel.setText("Path length factor");
        pathLengthFactorLabel.setEnabled(false);

        pathLengthFactorTextField.setEditable(false);
        pathLengthFactorTextField.setText("0.5651");
        pathLengthFactorTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        transitionThresholdLabel.setText("Transition threshold");
        transitionThresholdLabel.setEnabled(false);

        transitionThresholdTextField.setEditable(false);
        transitionThresholdTextField.setText("0.4972");
        transitionThresholdTextField.setPreferredSize(new java.awt.Dimension(45, 25));

        phiSlider.setMaximum(10000);
        phiSlider.setValue(1784);
        phiSlider.setEnabled(false);
        phiSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        phiSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                phiSliderStateChanged(evt);
            }
        });

        rhoSlider.setMaximum(10000);
        rhoSlider.setValue(3044);
        rhoSlider.setEnabled(false);
        rhoSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        rhoSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rhoSliderStateChanged(evt);
            }
        });

        q0Slider.setMaximum(10000);
        q0Slider.setValue(8331);
        q0Slider.setEnabled(false);
        q0Slider.setPreferredSize(new java.awt.Dimension(140, 25));
        q0Slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                q0SliderStateChanged(evt);
            }
        });

        numAntsSlider.setMaximum(10000);
        numAntsSlider.setValue(3973);
        numAntsSlider.setEnabled(false);
        numAntsSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        numAntsSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numAntsSliderStateChanged(evt);
            }
        });

        numIterationsSlider.setMaximum(10000);
        numIterationsSlider.setValue(5404);
        numIterationsSlider.setEnabled(false);
        numIterationsSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        numIterationsSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numIterationsSliderStateChanged(evt);
            }
        });

        alphaSlider.setMaximum(10000);
        alphaSlider.setValue(10000);
        alphaSlider.setEnabled(false);
        alphaSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        alphaSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                alphaSliderStateChanged(evt);
            }
        });

        betaSlider.setMaximum(10000);
        betaSlider.setValue(10000);
        betaSlider.setEnabled(false);
        betaSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        betaSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                betaSliderStateChanged(evt);
            }
        });

        initialPheromoneSlider.setMaximum(10000);
        initialPheromoneSlider.setValue(4928);
        initialPheromoneSlider.setEnabled(false);
        initialPheromoneSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        initialPheromoneSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                initialPheromoneSliderStateChanged(evt);
            }
        });

        punishmentThresholdSlider.setMaximum(10000);
        punishmentThresholdSlider.setValue(6806);
        punishmentThresholdSlider.setEnabled(false);
        punishmentThresholdSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        punishmentThresholdSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                punishmentThresholdSliderStateChanged(evt);
            }
        });

        pathLengthFactorSlider.setMaximum(10000);
        pathLengthFactorSlider.setValue(5651);
        pathLengthFactorSlider.setEnabled(false);
        pathLengthFactorSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        pathLengthFactorSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pathLengthFactorSliderStateChanged(evt);
            }
        });

        transitionThresholdSlider.setMaximum(10000);
        transitionThresholdSlider.setValue(4972);
        transitionThresholdSlider.setEnabled(false);
        transitionThresholdSlider.setPreferredSize(new java.awt.Dimension(140, 25));
        transitionThresholdSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                transitionThresholdSliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numIterationsLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numIterationsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numIterationsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(numAntsLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numAntsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numAntsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phiSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rhoLabel)
                            .addComponent(rhoSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(rhoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(phiLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(q0Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q0TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(q0Label, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(betaLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(initialPheromoneLabel)
                                .addComponent(pathLengthFactorLabel)
                                .addComponent(punishmentThresholdSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(transitionThresholdLabel)
                                .addComponent(pathLengthFactorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(betaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(alphaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(initialPheromoneSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(transitionThresholdSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(punishmentThresholdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(alphaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pathLengthFactorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(punishmentThresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(betaTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(transitionThresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(initialPheromoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(alphaLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(phiLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phiSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(phiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addComponent(rhoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rhoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rhoSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(q0Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(q0TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(q0Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numAntsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numAntsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numAntsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numIterationsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numIterationsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numIterationsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(alphaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alphaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alphaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(betaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(betaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(betaSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(initialPheromoneLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(initialPheromoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(initialPheromoneSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(punishmentThresholdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(punishmentThresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(punishmentThresholdSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pathLengthFactorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pathLengthFactorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pathLengthFactorSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transitionThresholdLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transitionThresholdSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transitionThresholdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void phiSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_phiSliderStateChanged
        phiTextField.setText(String.valueOf(phiSlider.getValue()/(double)phiSlider.getMaximum()));
    }//GEN-LAST:event_phiSliderStateChanged

    private void rhoSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rhoSliderStateChanged
        rhoTextField.setText(String.valueOf(rhoSlider.getValue()/(double)rhoSlider.getMaximum()));
    }//GEN-LAST:event_rhoSliderStateChanged

    private void q0SliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_q0SliderStateChanged
        q0TextField.setText(String.valueOf(q0Slider.getValue()/(double)q0Slider.getMaximum()));
    }//GEN-LAST:event_q0SliderStateChanged

    private void numAntsSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numAntsSliderStateChanged
        numAntsTextField.setText(String.valueOf(numAntsSlider.getValue()/(double)numAntsSlider.getMaximum()));
    }//GEN-LAST:event_numAntsSliderStateChanged

    private void numIterationsSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numIterationsSliderStateChanged
        numIterationsTextField.setText(String.valueOf(numIterationsSlider.getValue()/(double)numIterationsSlider.getMaximum()));
    }//GEN-LAST:event_numIterationsSliderStateChanged

    private void alphaSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_alphaSliderStateChanged
        alphaTextField.setText(String.valueOf(alphaSlider.getValue()/(double)alphaSlider.getMaximum()));
    }//GEN-LAST:event_alphaSliderStateChanged

    private void betaSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_betaSliderStateChanged
        betaTextField.setText(String.valueOf(betaSlider.getValue()/(double)betaSlider.getMaximum()));
    }//GEN-LAST:event_betaSliderStateChanged

    private void initialPheromoneSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_initialPheromoneSliderStateChanged
        initialPheromoneTextField.setText(String.valueOf(initialPheromoneSlider.getValue()/(double)initialPheromoneSlider.getMaximum()));
    }//GEN-LAST:event_initialPheromoneSliderStateChanged

    private void punishmentThresholdSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_punishmentThresholdSliderStateChanged
        punishmentThresholdTextField.setText(String.valueOf(punishmentThresholdSlider.getValue()/(double)punishmentThresholdSlider.getMaximum()));
    }//GEN-LAST:event_punishmentThresholdSliderStateChanged

    private void pathLengthFactorSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pathLengthFactorSliderStateChanged
        pathLengthFactorTextField.setText(String.valueOf(pathLengthFactorSlider.getValue()/(double)pathLengthFactorSlider.getMaximum()));
    }//GEN-LAST:event_pathLengthFactorSliderStateChanged

    private void transitionThresholdSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_transitionThresholdSliderStateChanged
        transitionThresholdTextField.setText(String.valueOf(transitionThresholdSlider.getValue()/(double)transitionThresholdSlider.getMaximum()));
    }//GEN-LAST:event_transitionThresholdSliderStateChanged
    
    /**
     * Retrieves phi parameter from its corresponding field in the panel
     * @return phi parameter
     */
    protected double get_phi() {
        return Double.parseDouble(phiTextField.getText());
    }
    
    /**
     * Sets phi parameter into its corresponding field in the panel
     * @param phi phi parameter value to be set
     */
    protected void set_phi(double phi) {
        phiSlider.setValue((int)((phiSlider.getMaximum()-phiSlider.getMinimum())*phi));
    }
    
    /**
     * Retrieves rho parameter from its corresponding field in the panel
     * @return rho parameter
     */
    protected double get_rho() {
        return Double.parseDouble(rhoTextField.getText());
    }
    
    /**
     * Sets rho parameter into its corresponding field in the panel
     * @param rho rho parameter value to be set
     */
    protected void set_rho(double rho) {
        rhoSlider.setValue((int)((rhoSlider.getMaximum()-rhoSlider.getMinimum())*rho));
    }
    
    /**
     * Retrieves q0 parameter from its corresponding field in the panel
     * @return q0 parameter
     */
    protected double get_q0() {
        return Double.parseDouble(q0TextField.getText());
    }
    
    /**
     * Sets q0 parameter into its corresponding field in the panel
     * @param q0 q0 parameter value to be set
     */
    protected void set_q0(double q0) {
        q0Slider.setValue((int)((q0Slider.getMaximum()-q0Slider.getMinimum())*q0));
    }
    
    /**
     * Retrieves numAnts parameter from its corresponding field in the panel
     * @return numAnts parameter
     */
    protected double get_numAnts() {
        return Double.parseDouble(numAntsTextField.getText());
    }
    
    /**
     * Sets numAnts parameter into its corresponding field in the panel
     * @param numAnts numAnts parameter value to be set
     */
    protected void set_numAnts(double numAnts) {
        numAntsSlider.setValue((int)((numAntsSlider.getMaximum()-numAntsSlider.getMinimum())*numAnts));
    }
    
    /**
     * Retrieves numIterations parameter from its corresponding field in the panel
     * @return numIterations parameter
     */
    protected double get_numIterations() {
        return Double.parseDouble(numIterationsTextField.getText());
    }
    
    /**
     * Sets numIterations parameter into its corresponding field in the panel
     * @param numIterations numIterations parameter value to be set
     */
    protected void set_numIterations(double numIterations) {
        numIterationsSlider.setValue((int)((numIterationsSlider.getMaximum()-numIterationsSlider.getMinimum())*numIterations));
    }
    
    /**
     * Retrieves alpha parameter from its corresponding field in the panel
     * @return alpha parameter
     */
    protected double get_alpha() {
        return Double.parseDouble(alphaTextField.getText());
    }
    
    /**
     * Sets alpha parameter into its corresponding field in the panel
     * @param alpha alpha parameter value to be set
     */
    protected void set_alpha(double alpha) {
        alphaSlider.setValue((int)((alphaSlider.getMaximum()-alphaSlider.getMinimum())*alpha));
    }
    
    /**
     * Retrieves beta parameter from its corresponding field in the panel
     * @return beta parameter
     */
    protected double get_beta() {
        return Double.parseDouble(betaTextField.getText());
    }
    
    /**
     * Sets beta parameter into its corresponding field in the panel
     * @param beta beta parameter value to be set
     */
    protected void set_beta(double beta) {
        betaSlider.setValue((int)((betaSlider.getMaximum()-betaSlider.getMinimum())*beta));
    }
    
    /**
     * Retrieves initialPheromone parameter from its corresponding field in the panel
     * @return initialPheromone parameter
     */
    protected double get_initialPheromone() {
        return Double.parseDouble(initialPheromoneTextField.getText());
    }
    
    /**
     * Sets initialPheromone parameter into its corresponding field in the panel
     * @param initialPheromone initialPheromone parameter value to be set
     */
    protected void set_initialPheromone(double initialPheromone) {
        initialPheromoneSlider.setValue((int)((initialPheromoneSlider.getMaximum()-initialPheromoneSlider.getMinimum())*initialPheromone));
    }
    
    /**
     * Retrieves transitionThreshold parameter from its corresponding field in the panel
     * @return transitionThreshold parameter
     */
    protected double get_transitionThreshold() {
        return Double.parseDouble(transitionThresholdTextField.getText());
    }
    
    /**
     * Sets transitionThreshold parameter into its corresponding field in the panel
     * @param transitionThreshold transitionThreshold parameter value to be set
     */
    protected void set_transitionThreshold(double transitionThreshold) {
        transitionThresholdSlider.setValue((int)((transitionThresholdSlider.getMaximum()-transitionThresholdSlider.getMinimum())*transitionThreshold));
    }
    
    /**
     * Retrieves pathLengthFactor parameter from its corresponding field in the panel
     * @return pathLengthFactor parameter
     */
    protected double get_pathLengthFactor() {
        return Double.parseDouble(pathLengthFactorTextField.getText());
    }
    
    /**
     * Sets pathLengthFactor parameter into its corresponding field in the panel
     * @param pathLengthFactor pathLengthFactor parameter value to be set
     */
    protected void set_pathLengthFactor(double pathLengthFactor) {
        pathLengthFactorSlider.setValue((int)((pathLengthFactorSlider.getMaximum()-pathLengthFactorSlider.getMinimum())*pathLengthFactor));
    }
    
    /**
     * Retrieves punishmentThreshold parameter from its corresponding field in the panel
     * @return punishmentThreshold parameter
     */
    protected double get_punishmentThreshold() {
        return Double.parseDouble(punishmentThresholdTextField.getText());
    }    
    
    /**
     * Sets punishmentThreshold parameter into its corresponding field in the panel
     * @param punishmentThreshold punishmentThreshold parameter value to be set
     */
    protected void set_punishmentThreshold(double punishmentThreshold) {
        punishmentThresholdSlider.setValue((int)((punishmentThresholdSlider.getMaximum()-punishmentThresholdSlider.getMinimum())*punishmentThreshold));
    }

    @Override
    public TRMParameters get_TRMParameters() {
        BTRM_WSN_Parameters btrmParameters = new BTRM_WSN_Parameters();
        
        btrmParameters.set_phi(get_phi());
        btrmParameters.set_rho(get_rho());
        btrmParameters.set_q0(get_q0());
        btrmParameters.set_numAnts(get_numAnts());
        btrmParameters.set_numIterations(get_numIterations());
        btrmParameters.set_alpha(get_alpha());
        btrmParameters.set_beta(get_beta());
        btrmParameters.set_initialPheromone(get_initialPheromone());
        btrmParameters.set_transitionThreshold(get_transitionThreshold());
        btrmParameters.set_pathLengthFactor(get_pathLengthFactor());
        btrmParameters.set_punishmentThreshold(get_punishmentThreshold());
        
        return btrmParameters;
    }

    @Override
    public void set_TRMParameters(TRMParameters trmParameters) {
        BTRM_WSN_Parameters btrmParameters = (BTRM_WSN_Parameters)trmParameters;
        
        set_phi(btrmParameters.get_phi());
        set_rho(btrmParameters.get_rho());
        set_q0(btrmParameters.get_q0());
        set_numAnts(btrmParameters.get_numAnts());
        set_numIterations(btrmParameters.get_numIterations());
        set_alpha(btrmParameters.get_alpha());
        set_beta(btrmParameters.get_beta());
        set_initialPheromone(btrmParameters.get_initialPheromone());
        set_transitionThreshold(btrmParameters.get_transitionThreshold());
        set_pathLengthFactor(btrmParameters.get_pathLengthFactor());
        set_punishmentThreshold(btrmParameters.get_punishmentThreshold());
    }
    
    @Override
    public void setEnabled(boolean enabled) {
        phiLabel.setEnabled(enabled);
        phiSlider.setEnabled(enabled);
        rhoLabel.setEnabled(enabled);
        rhoSlider.setEnabled(enabled);
        q0Label.setEnabled(enabled);
        q0Slider.setEnabled(enabled);
        numAntsLabel.setEnabled(enabled);
        numAntsSlider.setEnabled(enabled);
        numIterationsLabel.setEnabled(enabled);
        numIterationsSlider.setEnabled(enabled);
        alphaLabel.setEnabled(enabled);
        alphaSlider.setEnabled(enabled);
        betaLabel.setEnabled(enabled);
        betaSlider.setEnabled(enabled);
        initialPheromoneLabel.setEnabled(enabled);
        initialPheromoneSlider.setEnabled(enabled);
        transitionThresholdLabel.setEnabled(enabled);
        transitionThresholdSlider.setEnabled(enabled);
        pathLengthFactorLabel.setEnabled(enabled);
        pathLengthFactorSlider.setEnabled(enabled);
        punishmentThresholdLabel.setEnabled(enabled);
        punishmentThresholdSlider.setEnabled(enabled);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alphaLabel;
    private javax.swing.JSlider alphaSlider;
    private javax.swing.JTextField alphaTextField;
    private javax.swing.JLabel betaLabel;
    private javax.swing.JSlider betaSlider;
    private javax.swing.JTextField betaTextField;
    private javax.swing.JLabel initialPheromoneLabel;
    private javax.swing.JSlider initialPheromoneSlider;
    private javax.swing.JTextField initialPheromoneTextField;
    private javax.swing.JLabel numAntsLabel;
    private javax.swing.JSlider numAntsSlider;
    private javax.swing.JTextField numAntsTextField;
    private javax.swing.JLabel numIterationsLabel;
    private javax.swing.JSlider numIterationsSlider;
    private javax.swing.JTextField numIterationsTextField;
    private javax.swing.JLabel pathLengthFactorLabel;
    private javax.swing.JSlider pathLengthFactorSlider;
    private javax.swing.JTextField pathLengthFactorTextField;
    private javax.swing.JLabel phiLabel;
    private javax.swing.JSlider phiSlider;
    private javax.swing.JTextField phiTextField;
    private javax.swing.JLabel punishmentThresholdLabel;
    private javax.swing.JSlider punishmentThresholdSlider;
    private javax.swing.JTextField punishmentThresholdTextField;
    private javax.swing.JLabel q0Label;
    private javax.swing.JSlider q0Slider;
    private javax.swing.JTextField q0TextField;
    private javax.swing.JLabel rhoLabel;
    private javax.swing.JSlider rhoSlider;
    private javax.swing.JTextField rhoTextField;
    private javax.swing.JLabel transitionThresholdLabel;
    private javax.swing.JSlider transitionThresholdSlider;
    private javax.swing.JTextField transitionThresholdTextField;
    // End of variables declaration//GEN-END:variables
}